<html>
<head>
<link rel="stylesheet" href="BLUEPRNT/SCREEN.CSS" type="text/css" media="screen, projection">
<style type="text/css">
input { /*slim up the wide 999 second boxes */
	width: 2.55em;
	text-align:right;
}
label {
	font-weight: normal;
}
div.duration_container {
	display: inline-block;
}
div.wait, div.duration {
	display: inline-block;
	position: relative;
	top: 8px;
}
div.wait a, div.duration a {
	display: block;
	border: 1px solid #aaa;
	background: rgb(247,247,247);
	font-size: 1em;
	text-align: center;
	text-decoration: none;
	color: #000;
	width: 15px;
	height: 16px;
	margin: 0 0 -1px 0;
}
</style>
<!--[if lt IE 8]>
	<link rel="stylesheet" href="BLUEPRNT/IE.CSS" type="text/css" media="screen, projection">
<![endif]-->
<script src="jqry171.js"></script>

<script>
	$(function(){//shortcut for doc.ready
		var increment_on_hold_speed = 50;	//auto ++ing value every n milliseconds
		var increment_hold_delay = 1000;	//the delay in milliseconds (timeout) before auto ++ing
		var interval = null;				//var for auto incrementing
		var timeout = null;					//var for auto incrementing delay
		
		function stop_auto(){				//this function is called whenever you want to stop auto incrementing
			clearInterval(interval);
			clearTimeout(timeout);
			console.log("stopped");
		};//end stop_auto
		
		
		function load_settings(){
			//this should load values from the firmware
			//including intelligent defaults
			//and populate the form correctly
			
	      //Data receiving protocol (Arduino --> Browser)
	      //Input array;Input on/off;On delay;Output array;Output on/off;Duration;status code;Free RAM;
	      //0,0,0,0,0,0;1,1,1,1,1,1;0,0,0,0,0,0;0,0,0,0,0,0;1,1,1,1,1,1;0,0,0,0,0,0;0;182;
	
	      //status codes
	      //0 = all good
	      //1 = 
	      //2 = 
	      //3 = 
	      //4 =
			var dummy_load_data = "1,2,3,4,5,6;0,1,0,1,0,1;0,1,10,100,500,900;1,2,3,4,5,6;0,1,0,1,0,1;0,1,10,100,500,900;0,778"
			$(".duration_container").hide();		//TEMPORARY. REPLACE WITH APPROPRIATE SHOW/HIDING OF DURATION BOX BASED ON READ SETTINGS
			
		};//end load_settings()
		
		load_settings();
		
		$("input.wait_time").change(function(){					//whenever the wait field changes
			$(this).val(parseInt(sanitize($(this).val())));		//update the input with sanitized
		});
		
		function sanitize(num) {
			if(parseInt(num) >= 0){					//sanitize, filter out NaN and negative numbers
				//console.log("OK: num = " + num + "  	parseInt(num) = " + parseInt(num));
			    return parseInt(num);				//return the clean value
			}else{
				console.log("ERROR: num = " + num + "  	parseInt(num) = " + parseInt(num) + "   ==> 0");
				return "0";							//if the user entered garbage, set to "0"
			};
		};//end sanitize()
		
		
		$("#save").click(function(){	//this function sets up the call to cupcake with the columns you want sent
			//for instance, you could call this on a button press, or value change
			//define the columns to submit via cupcake()
			var column_names = ["select.sensor", "select.sensor_state", "input.wait_time", "select.output", "select.output_state", "input.output_duration"];
			cupcake(column_names);
		});
		
		function cupcake(column_names){			//cupcake acutally formats and sends the data to the Arduino
			var post_data = "";					//initialize the POST string
			var counter = 0;					//use to insert commas after each row
			var rows = $(".row").length;		//count how many rows, use for delimiters
			
			for (var i=0, tot=column_names.length; i < tot; i++) {	//loop through columns passed to cupcake
				$(column_names[i]).each(function(){	//loop through a single column
					counter ++;						//increment counter
					post_data += $(this).val();		//append value of input
					if(counter == rows){			//append appropriate element or row delimiter
						post_data += ";";			//row delimiter
						counter = 0;				//reset counter
					}else{
						post_data += ",";			//element delimiter
					};
				});//end each sensor loop
			};//loop through each column
			
			//console.log("rows: " + rows);
			console.log(post_data);				//log to firebug
			
			$.post("http://192.168.1.9/testget", post_data, function(data){ 	//the AJAX bit
			//	console.log("posted " + post_data);
				$("#status").hide().html(data).fadeIn();
			});
			
		};//end cupcake()
		
		
		function fast_plus_minus(input,direction){	//this increments and fast increments either + or - based on the direction
			//it is called by the delay field and the duration field
			stop_auto();										//stop all value auto increments
			var current_wait = sanitize(input.val());			//get sanitized current wait
			if(direction == "+"){								//if "+" was passed to the function
				input.val(input_up(current_wait));					//get & set new value

				timeout = setTimeout(function(){					//This waits 1 second before...
					interval = setInterval(function(){				//auto ++ing value every n milliseconds
						current_wait = sanitize(input.val());		//get sanitized current wait
						input.val(input_up(current_wait));			//get & set new value
					}, increment_on_hold_speed);					//the speed of ++ing the value
				},increment_hold_delay);							//the delay (timeout) before ++ing
			}else if(direction == "-"){							//if "-" was passed to the function
				input.val(input_down(current_wait));				//get & set new value

				timeout = setTimeout(function(){					//This waits 1 second before...
					interval = setInterval(function(){				//auto ++ing value every n milliseconds
						current_wait = sanitize(input.val());		//get sanitized current wait
						input.val(input_down(current_wait));		//get & set new value
					}, increment_on_hold_speed);					//the speed of auto ++ing the value
				},increment_hold_delay);							//the delay (timeout) before auto ++ing
			};
			
			//maybe put the interval timers here.
			return false;										//prevent the html link from doing anything	
		};
		
		function input_up(current){								//this increments the current value up to 999
			console.log("input_up " + current);
			var newval;
			if(current < 999){									//if less than 999
				newval = current + 1;							//add 1
			}else{
				newval = 999;									//if at 999, leave at 999
				stop_auto();									//stop auto timer, we're at zero
				//flash limit message here if you want				
			};
			return newval;
		};//end input_limits
		
		function input_down(current){							//this increments the current down to 0
			console.log("input_down " + current);
			var newval;
			if(current <= 0){									//if 0 or negative
				newval = 0;										//set to zero
				stop_auto();									//stop auto timer, we're at zero
				//flash limit message here if you want
			}else{												//if positive
				newval = current - 1;							//subtract 1
			};
			return newval;
		};//end input_limits
		
		$(".wait .up").mousedown(function(){					//call the "+" handler
			fast_plus_minus($(this).parent().next(),"+");
		});
		$(".wait .up").mouseup(function(){						//stop when the mouse click stops
			stop_auto();										//stop all value auto increments
		});
		$(".wait .up").mouseleave(function(){					//stop when the mouse leaves the button (in case you held down then left)
			stop_auto();										//stop all value auto increments
		});
		
		$(".wait .down").mousedown(function(){					//call the "-" handler
			fast_plus_minus($(this).parent().next(),"-");
		});
		$(".wait .down").mouseup(function(){					//stop when the mouse click stops
			stop_auto();										//stop all value auto increments
		});
		$(".wait .down").mouseleave(function(){					//stop when the mouse leaves the button (in case you held down then left)
			stop_auto();										//stop all value auto increments
		});


		$("input.output_duration").change(function(){					//on manual keybaord entry
			var newval = 1;												//default new value
			var current = sanitize($(this).val());						//get the sanitized value
			if(current != 0){											//if sanitized not 0, then let it pass, otherwise use the default of 1
				newval = current;
			}
			$(this).val(newval);										//update field with either 1 or clean value
			console.log("changed, duration = " + newval);
		});
		
		$("select.output_duration").change(function(){					//when dropdown changes...
			temp = $(this).val();										//get current value
			var new_duration;											//initialize new duration
			if(temp == "constantly"){									//if "constantly"
				$(this).next(".duration_container").fadeOut(250);		//fade out buttons & field
				$(this).children('option[value="for"]').html("for...")	//update grammar
				new_duration = 0;										//set duration = 0
			}else if(temp == "for"){									//if "for..".
				$(this).next(".duration_container").fadeIn(250);		//show buttons & field
				$(this).children('option[value="for"]').html("for");	//update grammar
				new_duration = "1";										//set duration = 1
			}
			$(this).next().children('input[class="output_duration"]').val(new_duration);	//set the field to the new value	
			console.log("output changed, value = " + $("#output_duration3").val());
		});//output_duration.change()
		
		$(".duration .up").mousedown(function(){				//call the "+" handler
			fast_plus_minus($(this).parent().next(),"+");
		});
		$(".duration .up").mouseup(function(){					//stop when the mouse click stops
			stop_auto();										//stop all value auto increments
			}else{
		});
		$(".duration .up").mouseleave(function(){				//stop when the mouse leaves the button (in case you held down then left)
			stop_auto();										//stop all value auto increments
		});
		
		$(".duration .down").mousedown(function(){				//call the "-" handler
			fast_plus_minus($(this).parent().next(),"-");
		});
		$(".duration .down").mouseup(function(){				//stop when the mouse click stops
			stop_auto();										//stop all value auto increments
		});
		$(".duration .down").mouseleave(function(){				//stop when the mouse leaves the button (in case you held down then left)
			stop_auto();										//stop all value auto increments
		});
		
		
		
	/*	$(".duration .down").click(function(){
			stop_auto();										//stop all value auto increments
			current = sanitize($(this).parent().next().val());			//get sanitized current wait
			var newval;
			if(current <= 1){											//if less than or = 1 (1 is the minimum)
				newval = 1;												//set to 1
				//flash error here if you want
			}else{														//if positive
				newval = current - 1;									//subtract 1
			};
			$(this).parent().next().val(newval);						//set the new value
			console.log("- pressed, value = " + $("#output_duration3").val());
			return false;												//prevent the html link from doing anything
		})//end down click*/
		
		
		
		//Update the form with data
		// IE from the Arduino via AJAX
		/*
		$("#form #first").children().each(function(){
			data = "5";						//this is just a test
			if($(this).val() == data) {
				$(this).prop("selected","selected");
			};
		});
		*/
	});//doc.ready
</script>
</head>

<body>
	<div class="container">
		<div class="prepend-1 span-24">
			<h1>The HB</h1>
			<a href="settings.htm">Settings</a> | <a href="gui.htm">Program</a> | <a href="live.htm">Live View</a>
  			<h2>Program</h2>
			<p>Some kind of description here.</p>
			<form id="form">
				<!--begin row3 -->
				<div id="row3" class="row last">
					When input 
					<select id="sensor3" class="sensor" name="sensor3">
						<option value="0">-</option>
						<option value="1">A</option>
						<option value="2">B</option>
						<option value="3">C</option>
						<option value="4">D</option>
						<option value="5">E</option>
						<option value="6">F</option>
					</select>
					is
					<select id="sensor_state3" class="sensor_state" name="sensor_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					&nbsp;&nbsp;:&nbsp;&nbsp;
					Wait
					<div class="wait">
						<a href="#" class="up">+</a>
						<a href="#" class="down">-</a>
					</div>
					<input type="text" id="wait_time3" class="wait_time" name="wait_time3" maxlength="3" value="0" />
					second(s) then keep output
					<select id="output3" class="output" name="output3">
						<option value="0">-</option>
						<option value="1">1</option>
						<option value="2">2</option>
						<option value="3">3</option>
						<option value="4">4</option>
						<option value="5">5</option>
						<option value="6">6</option>
					</select>
					<select id=="output_state3" class="output_state" name="output_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					<select class="output_duration">
						<option value="constantly">constantly.</option>
						<option value="for">for...</option>
					</select>
					<div class="duration_container">
						<div class="duration">
							<a href="#" class="up">+</a>
							<a href="#" class="down">-</a>
						</div>
						<input type="text" id="output_duration3" class="output_duration" name="output_duration3" maxlength="3" value="0" />
						second(s).
					</div>
					<span class="row_status"></span>
				</div>
				<!--end row3 -->
				<!--begin row3 -->
				<div id="row3" class="row last">
					When input 
					<select id="sensor3" class="sensor" name="sensor3">
						<option value="0">-</option>
						<option value="1">A</option>
						<option value="2">B</option>
						<option value="3">C</option>
						<option value="4">D</option>
						<option value="5">E</option>
						<option value="6">F</option>
					</select>
					is
					<select id="sensor_state3" class="sensor_state" name="sensor_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					&nbsp;&nbsp;:&nbsp;&nbsp;
					Wait
					<div class="wait">
						<a href="#" class="up">+</a>
						<a href="#" class="down">-</a>
					</div>
					<input type="text" id="wait_time3" class="wait_time" name="wait_time3" maxlength="3" value="0" />
					second(s) then keep output
					<select id="output3" class="output" name="output3">
						<option value="0">-</option>
						<option value="1">1</option>
						<option value="2">2</option>
						<option value="3">3</option>
						<option value="4">4</option>
						<option value="5">5</option>
						<option value="6">6</option>
					</select>
					<select id=="output_state3" class="output_state" name="output_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					<select class="output_duration">
						<option value="constantly">constantly.</option>
						<option value="for">for...</option>
					</select>
					<div class="duration_container">
						<div class="duration">
							<a href="#" class="up">+</a>
							<a href="#" class="down">-</a>
						</div>
						<input type="text" id="output_duration3" class="output_duration" name="output_duration3" maxlength="3" value="0" />
						second(s).
					</div>
					<span class="row_status"></span>
				</div>
				<!--end row3 -->
				<!--begin row3 -->
				<div id="row3" class="row last">
					When input 
					<select id="sensor3" class="sensor" name="sensor3">
						<option value="0">-</option>
						<option value="1">A</option>
						<option value="2">B</option>
						<option value="3">C</option>
						<option value="4">D</option>
						<option value="5">E</option>
						<option value="6">F</option>
					</select>
					is
					<select id="sensor_state3" class="sensor_state" name="sensor_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					&nbsp;&nbsp;:&nbsp;&nbsp;
					Wait
					<div class="wait">
						<a href="#" class="up">+</a>
						<a href="#" class="down">-</a>
					</div>
					<input type="text" id="wait_time3" class="wait_time" name="wait_time3" maxlength="3" value="0" />
					second(s) then keep output
					<select id="output3" class="output" name="output3">
						<option value="0">-</option>
						<option value="1">1</option>
						<option value="2">2</option>
						<option value="3">3</option>
						<option value="4">4</option>
						<option value="5">5</option>
						<option value="6">6</option>
					</select>
					<select id=="output_state3" class="output_state" name="output_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					<select class="output_duration">
						<option value="constantly">constantly.</option>
						<option value="for">for...</option>
					</select>
					<div class="duration_container">
						<div class="duration">
							<a href="#" class="up">+</a>
							<a href="#" class="down">-</a>
						</div>
						<input type="text" id="output_duration3" class="output_duration" name="output_duration3" maxlength="3" value="0" />
						second(s).
					</div>
					<span class="row_status"></span>
				</div>
				<!--end row3 -->
				<!--begin row3 -->
				<div id="row3" class="row last">
					When input 
					<select id="sensor3" class="sensor" name="sensor3">
						<option value="0">-</option>
						<option value="1">A</option>
						<option value="2">B</option>
						<option value="3">C</option>
						<option value="4">D</option>
						<option value="5">E</option>
						<option value="6">F</option>
					</select>
					is
					<select id="sensor_state3" class="sensor_state" name="sensor_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					&nbsp;&nbsp;:&nbsp;&nbsp;
					Wait
					<div class="wait">
						<a href="#" class="up">+</a>
						<a href="#" class="down">-</a>
					</div>
					<input type="text" id="wait_time3" class="wait_time" name="wait_time3" maxlength="3" value="0" />
					second(s) then keep output
					<select id="output3" class="output" name="output3">
						<option value="0">-</option>
						<option value="1">1</option>
						<option value="2">2</option>
						<option value="3">3</option>
						<option value="4">4</option>
						<option value="5">5</option>
						<option value="6">6</option>
					</select>
					<select id=="output_state3" class="output_state" name="output_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					<select class="output_duration">
						<option value="constantly">constantly.</option>
						<option value="for">for...</option>
					</select>
					<div class="duration_container">
						<div class="duration">
							<a href="#" class="up">+</a>
							<a href="#" class="down">-</a>
						</div>
						<input type="text" id="output_duration3" class="output_duration" name="output_duration3" maxlength="3" value="0" />
						second(s).
					</div>
					<span class="row_status"></span>
				</div>
				<!--end row3 -->
				<!--begin row3 -->
				<div id="row3" class="row last">
					When input 
					<select id="sensor3" class="sensor" name="sensor3">
						<option value="0">-</option>
						<option value="1">A</option>
						<option value="2">B</option>
						<option value="3">C</option>
						<option value="4">D</option>
						<option value="5">E</option>
						<option value="6">F</option>
					</select>
					is
					<select id="sensor_state3" class="sensor_state" name="sensor_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					&nbsp;&nbsp;:&nbsp;&nbsp;
					Wait
					<div class="wait">
						<a href="#" class="up">+</a>
						<a href="#" class="down">-</a>
					</div>
					<input type="text" id="wait_time3" class="wait_time" name="wait_time3" maxlength="3" value="0" />
					second(s) then keep output
					<select id="output3" class="output" name="output3">
						<option value="0">-</option>
						<option value="1">1</option>
						<option value="2">2</option>
						<option value="3">3</option>
						<option value="4">4</option>
						<option value="5">5</option>
						<option value="6">6</option>
					</select>
					<select id=="output_state3" class="output_state" name="output_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					<select class="output_duration">
						<option value="constantly">constantly.</option>
						<option value="for">for...</option>
					</select>
					<div class="duration_container">
						<div class="duration">
							<a href="#" class="up">+</a>
							<a href="#" class="down">-</a>
						</div>
						<input type="text" id="output_duration3" class="output_duration" name="output_duration3" maxlength="3" value="0" />
						second(s).
					</div>
					<span class="row_status"></span>
				</div>
				<!--end row3 -->
				<!--begin row3 -->
				<div id="row3" class="row last">
					When input 
					<select id="sensor3" class="sensor" name="sensor3">
						<option value="0">-</option>
						<option value="1">A</option>
						<option value="2">B</option>
						<option value="3">C</option>
						<option value="4">D</option>
						<option value="5">E</option>
						<option value="6">F</option>
					</select>
					is
					<select id="sensor_state3" class="sensor_state" name="sensor_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					&nbsp;&nbsp;:&nbsp;&nbsp;
					Wait
					<div class="wait">
						<a href="#" class="up">+</a>
						<a href="#" class="down">-</a>
					</div>
					<input type="text" id="wait_time3" class="wait_time" name="wait_time3" maxlength="3" value="0" />
					second(s) then keep output
					<select id="output3" class="output" name="output3">
						<option value="0">-</option>
						<option value="1">1</option>
						<option value="2">2</option>
						<option value="3">3</option>
						<option value="4">4</option>
						<option value="5">5</option>
						<option value="6">6</option>
					</select>
					<select id=="output_state3" class="output_state" name="output_state3">
						<option value="1">on</option>
						<option value="0">off</option>
					</select>
					<select class="output_duration">
						<option value="constantly">constantly.</option>
						<option value="for">for...</option>
					</select>
					<div class="duration_container">
						<div class="duration">
							<a href="#" class="up">+</a>
							<a href="#" class="down">-</a>
						</div>
						<input type="text" id="output_duration3" class="output_duration" name="output_duration3" maxlength="3" value="0" />
						second(s).
					</div>
					<span class="row_status"></span>
				</div>
				<!--end row3 -->

				<button id="save" name="save" type="button">Save Program</button>
				<div id="status"></div>

			</form>
  
		</div>
	</div>
	<script src="SCRIPTS.JS"></script>
</body>
</html>