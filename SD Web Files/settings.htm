<html>
<head>

<link rel="stylesheet" href="BLUEPRNT/SCREEN.CSS" type="text/css" media="screen, projection">
<!--[if lt IE 8]>
	<link rel="stylesheet" href="BLUEPRNT/IE.CSS" type="text/css" media="screen, projection">
<![endif]-->
<style type="text/css">
input[type="text"] {
	width: 90px;
}
input[type="radio"] + input[type="radio"]{
	margin-left: .9em;
}
</style>
<script src="jqry171.js"></script>
<script>
	$(function(){//shortcut for doc.ready		
		$("#save").click(function(){
			//Data receiving protocol (Arduino --> Browser)
			//inputs & outputs;input names;output names;
			//"1,1,1,1,1,1,1,1,1,1,1,1;input_name1,input_name2,input_name3,input_name4,input_name5,input_name6;output_name1,output_name2,output_name3,output_name4,output_name5,output_name6;0;199;"
			
			//define the columns to submit via cupcake()
			var column_names = ["input[type='radio']:checked", "input.input_name", "input.output_name"];
			cupcake_settings(column_names);
		});
		
		function clean_this_array(dirty_array){					//converts arrays of strings into arrays of integers
			for (i in dirty_array){								//for each element in the array
				dirty_array[i] = parseInt(dirty_array[i]);		//convert strings to int "1" --> 1
			}
		};
		
		var dummy_settings_data = "0,1,0,1,0,1,0,1,0,1,0,1;input_name1,input_name2,input_name3,input_name4,input_name5,input_name6;output_name1,output_name2,output_name3,output_name4,output_name5,output_name6;0;199;"
		var input_names = new Array();
		var output_names = new Array();
		var io_definitions = new Array();
		var temp = dummy_settings_data.split(";");	//split into substrings
	
		if (temp[3].length == 0) {		//test for length == 0 then delete element
			temp.splice(3,1);			//this trims off the junk after the last ";"
		};
	
		io_definitions = temp[0].split(",");
		input_names = temp[1].split(",");
		output_names = temp[2].split(",");
		
		clean_this_array(io_definitions);
		
		function pad_radio_array(array) {		//this function takes an array and adds the opposite 1/0 after each corresponding element
												//it will double the size of the array ie: [1,1,0,0] --> [1,0,1,0,0,1,0,1]
			var new_padded_array = new Array();
			for (i in array){
				new_padded_array.splice(new_padded_array.length,0,array[i],1-array[i]);	//add the orig and inverted to the end of the new array (1-array[i] does the actual inversion)
			}
			//console.log("pad_radio_array input:  " + array);
			//console.log("pad_radio_array output: " + new_padded_array);
			return new_padded_array;
		};//end pad_radio_array()
		
		/*
		console.log(io_definitions);
		console.log(input_names);
		console.log(output_names);
		*/
		
		function set_inputs(selector,array){			//this takes a jQuery selector (an input or select) and sets it w/ values from an array
			j = 0;										//init a counter var
			$(selector).each(function(){				//loop through each <select>
				for (i in array){						//loop through each element in array
					if (j == i){						//if this element # corresponds w/ this <select>
						$(this).val(array[i]);			//set the value
						
						//if the selector is a radio (as on the settings page)
						if ($(selector).attr("type") == "radio" && array[i] == 1){	//if radio and array value = 1
							$(this).attr("checked", "checked"); //Check it (the browser unchecks the other)
						};
						
						//if the selector is the output duration, we have to do some fancy stuff about the hidden fields
						if (selector == "input.output_duration") {
							temp_selected = $(this).parent();							//reduce jquery calls
							if (array[i] > 0) {											//if the duration is not zero
								temp_selected.show();									//show the input field
								temp_selected.prev().val("for");						//choose the "for" select
								temp_selected.prev().children().last().html("for");		//and change the "for..." to "for"
							}else{													//if it is 0
								temp_selected.hide();									//hide the field
								temp_selected.prev().val("constantly");					//and choose "constantly" to complete the sentence
							}
						};
					};
				};
				j ++;									//increment counter
			});
		};//end set_inputs()
		
		/*
		function set_radios(selector, array){ //This function sets radio buttons in groups of 2
			//it uses a function called isEven() as a helper
			var j = 0; //set up counter that only increments every other radio (since they are grouped by 2 essentially)
			$(selector).each(function(index){
				//Note, you will essentially go through each radio twice and thus set the value twice hence the j hack
				if($(this).val() == array[j]){//if the radio value is == to the io value
					$(this).attr("checked", "checked"); //Check it (the browser unchecks the other)
				}
				if(isEven(index) && index != 0){ // if this is not the first time through and is an "everyother time through"
					j++; //increment the counter to look at next array value
				}
			});
		}//end set_radios()
		
		function isEven(value) {		//this checks if a given number is an even # and returns true/false
			if (value%2 == 0){ //% is modulus. Basically checks for remainder
				return true;
			} else {
				return false;
			}
		}//end isEven()*/
		
		//set_radios("input.highlow",io_definitions);
		set_inputs("input.highlow",pad_radio_array(io_definitions));	//be sure to pad the radio array with it's paired inversions before sending to the set_inputs function
		set_inputs(".input_name",input_names);
		set_inputs(".output_name",output_names);
		
		function cupcake_settings(column_names){
			var post_data = "";					//initialize the POST string
			var counter = 0;					//use to insert commas after each row
	
			for (var i=0, tot=column_names.length; i < tot; i++) {
				//console.log($(column_names[i]));			//log the current object
			    //console.log($(column_names[i]).length);		//log the current object length
			
				$(column_names[i]).each(function(){	//loop through a single column
					counter ++;						//increment counter
					post_data += $(this).val();		//append value of input
					if(counter == $(column_names[i]).length){			//append appropriate element or row delimiter
						post_data += ";";			//row delimiter
						counter = 0;				//reset counter
					}else{
						post_data += ",";			//element delimiter
					};
				});//each element loop
			};//loop through each column
	
			console.log(post_data);				//log to firebug
	
			/*$.post("http://192.168.1.9/testget",post_data,function(){ 	//the AJAX bit
			//	console.log("posted " + post_data);
			});
			*/
		};//end cupcake()
		

	});
</script>
</head>

<body>
	<div class="container">
		<div class="prepend-1 span-18">
			<h1>The HB</h1>
			<a href="settings.htm">Settings</a> | <a href="gui.htm">Program</a> | <a href="live.htm">Live View</a>
			<h2>Settings</h2>
			<p>Feel free to rename your inputs and outputs here. You can also set whether
				digital HIGH or LOW will trigger the input.</p>
			
			<h3>Inputs</h3>
			<div class="last inputs">
				Input A: <input type="text" class="input_name" name="input1" id="input1" /> is considered on when its signal goes <input type="radio" class="highlow" name="highlow1" value="1" checked>High</input><input type="radio" class="highlow" name="highlow1" value="0">Low</input>.<br />
				Input B: <input type="text" class="input_name" name="input2" id="input2" /> is considered on when its signal goes <input type="radio" class="highlow" name="highlow2" value="1" checked>High</input><input type="radio" class="highlow" name="highlow2" value="0">Low</input>.<br />
				Input C: <input type="text" class="input_name" name="input3" id="input3" /> is considered on when its signal goes <input type="radio" class="highlow" name="highlow3" value="1" checked>High</input><input type="radio" class="highlow" name="highlow3" value="0">Low</input>.<br />
				Input D: <input type="text" class="input_name" name="input4" id="input4" /> is considered on when its signal goes <input type="radio" class="highlow" name="highlow4" value="1" checked>High</input><input type="radio" class="highlow" name="highlow4" value="0">Low</input>.<br />
				Input E: <input type="text" class="input_name" name="input5" id="input5" /> is considered on when its signal goes <input type="radio" class="highlow" name="highlow5" value="1" checked>High</input><input type="radio" class="highlow" name="highlow5" value="0">Low</input>.<br />
				Input F: <input type="text" class="input_name" name="input6" id="input6" /> is considered on when its signal goes <input type="radio" class="highlow" name="highlow6" value="1" checked>High</input><input type="radio" class="highlow" name="highlow6" value="0">Low</input>.
			</div>
			<br />
			<h3>Outputs</h3>
			<div class="last outputs">
				Output 1: <input type="text" class="output_name" name="output1" id="output1" /> is considered on when its signal goes <input type="radio" class="highlow" name="output_highlow1" value="1" checked>High</input><input type="radio" class="highlow" name="output_highlow1" value="0">Low</input>.<br />
				Output 2: <input type="text" class="output_name" name="output2" id="output2" /> is considered on when its signal goes <input type="radio" class="highlow" name="output_highlow2" value="1" checked>High</input><input type="radio" class="highlow" name="output_highlow2" value="0">Low</input>.<br />
				Output 3: <input type="text" class="output_name" name="output3" id="output3" /> is considered on when its signal goes <input type="radio" class="highlow" name="output_highlow3" value="1" checked>High</input><input type="radio" class="highlow" name="output_highlow3" value="0">Low</input>.<br />
				Output 4: <input type="text" class="output_name" name="output4" id="output4" /> is considered on when its signal goes <input type="radio" class="highlow" name="output_highlow4" value="1" checked>High</input><input type="radio" class="highlow" name="output_highlow4" value="0">Low</input>.<br />
				Output 5: <input type="text" class="output_name" name="output5" id="output5" /> is considered on when its signal goes <input type="radio" class="highlow" name="output_highlow5" value="1" checked>High</input><input type="radio" class="highlow" name="output_highlow5" value="0">Low</input>.<br />
				Output 6: <input type="text" class="output_name" name="output6" id="output6" /> is considered on when its signal goes <input type="radio" class="highlow" name="output_highlow6" value="1" checked>High</input><input type="radio" class="highlow" name="output_highlow6" value="0">Low</input>.
				
			</div>
			<button id="save">Save Settings</button>
		</div>
	</div>
</body>
</html>